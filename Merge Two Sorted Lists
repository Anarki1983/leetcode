Runtime: 0 ms, faster than 100.00% of Go online submissions for Merge Two Sorted Lists.
Memory Usage: 2.5 MB, less than 71.43% of Go online submissions for Merge Two Sorted Lists.

func mergeTwoLists(l1 *ListNode, l2 *ListNode) *ListNode {
    if l1 == nil && l2 == nil {
        return nil
    }
    if l1 == nil && l2 != nil {
        return l2
    }
    if l1 != nil && l2 == nil {
        return l1
    }

    main := l1
    sub := l2
    if main.Val > l2.Val {
        main = l2
        sub = l1
    }
    head := main
    
    for sub != nil {
        if main.Next != nil {
            if sub.Val < main.Next.Val {
                next := main.Next // save next pointer
                main.Next = sub   // concate node from sub
                sub = sub.Next    // move sub
                main = main.Next  // move main
                main.Next = next  // concate to origin next
            } else {
	    	        main = main.Next
	          }
        } else {
            main.Next = sub
            break
        }
    }

    return head
}
