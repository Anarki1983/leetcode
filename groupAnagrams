func groupAnagrams(strs []string) [][]string {
    // build rune mapping, map[rune]int
    ret := make([][]string, 0, 2)
    anagramMap := make(map[string][]string)
    for i:=0; i<len(strs); i++ {
        sortedStr := genSortedStr(strs[i])
        // add word to anagram group
        anagramMap[sortedStr] = append(anagramMap[sortedStr], strs[i])
    }
    
    for _, anagram := range anagramMap {
        ret = append(ret, anagram)
    }
    
    return ret
}

func genSortedStr(word string) string {
    runes := []rune(word)
    
    sort.Slice(runes, func(i,j int) bool {
        return runes[i] < runes[j]
    })
    
    return string(runes)
}
