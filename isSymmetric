//Runtime: 0 ms, faster than 100.00% of Go online submissions for Symmetric Tree.
//Memory Usage: 2.9 MB, less than 84.35% of Go online submissions for Symmetric Tree.

/**
 * Definition for a binary tree node.
 * type TreeNode struct {
 *     Val int
 *     Left *TreeNode
 *     Right *TreeNode
 * }
 */
func isSymmetric(root *TreeNode) bool {  
    if root == nil {
        return true
    }
 
    return traversal(root.Left, root.Right)
}

func traversal(left *TreeNode, right *TreeNode) bool {
    if left == nil && right == nil {
        return true
    }
    
    if left == nil && right != nil {
        return false
    }
    
    if left != nil && right == nil {
        return false
    }
    
    if left.Val != right.Val {
        return false
    }
    
    if !traversal(left.Left, right.Right) {
        return false
    }
    
    if !traversal(left.Right, right.Left) {
        return false
    }
    
    return true
}
