// Runtime: 3 ms, faster than 67.58% of Go online submissions for Sum of Left Leaves.
// Memory Usage: 2.5 MB, less than 85.16% of Go online submissions for Sum of Left Leaves.

/**
 * Definition for a binary tree node.
 * type TreeNode struct {
 *     Val int
 *     Left *TreeNode
 *     Right *TreeNode
 * }
 */
func sumOfLeftLeaves(root *TreeNode) int {
    if root == nil {
        return 0
    }
    
    return dfs(root, false)
}


func dfs(node *TreeNode, isLeft bool) int {
    if node == nil {
        return 0
    }
    
    if node.Left == nil && node.Right == nil {
        if isLeft {
            return node.Val
        }
    }
    
    left := dfs(node.Left, true)
    right := dfs(node.Right, false)
    
    return left + right
}
