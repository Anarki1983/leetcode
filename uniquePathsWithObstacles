func uniquePathsWithObstacles(obstacleGrid [][]int) int {
    // return if start block
	  if obstacleGrid == nil || obstacleGrid[0][0] == 1 {
		  return 0
	  }

  	m, n := len(obstacleGrid), len(obstacleGrid[0])

    // init border val
    // if g[i][j] == 0 then set g[i][j] to 1
    // if g[i][j] == 1 then set all grid after to 0
    // 010
    // 010
    // 000 
    // convert to
    // 100
    // 110
    // 100
    val := 1
    for i:=0; i<m; i++ {
        if obstacleGrid[i][0] == 1 {
            val = 0
        }        
        obstacleGrid[i][0] = val
    }
    
    val = 1
    for j:=1; j<n; j++ {
    if obstacleGrid[0][j] == 1 {
            val = 0
        }        
        obstacleGrid[0][j] = val
    }
    
    // g[i][j] = g[i-1][j] + g[i][j-1]
    // if g[i][j] == 1, set g[i][j] to 0 then continue
    for i:=1; i<m; i++ {
        for j:=1; j<n; j++ {
            if obstacleGrid[i][j] == 1 {
                obstacleGrid[i][j] = 0
                continue
            }
            obstacleGrid[i][j] = obstacleGrid[i-1][j] + obstacleGrid[i][j-1]
        }
    }

	  return obstacleGrid[m-1][n-1]
}
